<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sale.dao.sale.TconsigneeMapper">
  <resultMap id="BaseResultMap" type="com.example.sale.model.Tconsignee">
    <result column="consignee" jdbcType="VARCHAR" property="consignee" />
  </resultMap>

  <insert id="insert" parameterType="com.example.sale.model.Tconsignee">
    insert into t_consignee (consignee)
    values (#{consignee,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.example.sale.model.Tconsignee">
    insert into t_consignee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="consignee != null">
        consignee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="consignee != null">
        #{consignee,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="selectAll" resultMap="BaseResultMap">
    select * from t_consignee
  </select>

  <select id="selectByKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT consignee FROM t_consignee
    WHERE consignee LIKE CONCAT('%',#{key},'%')
    ORDER BY consignee ASC
    LIMIT 100
  </select>

  <select id="selectCountByKey" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT COALESCE(COUNT(consignee), 0) FROM t_consignee WHERE consignee LIKE CONCAT('%',#{key},'%')
  </select>

</mapper>